/* fadeAnimations.css */

/* Existing fade classes */

/* Reusable Fade Element */
.fade-element {
  opacity: 0;
  visibility: hidden; /* Hidden initially */
  transition: opacity 1s ease-in-out, visibility 0s 1s; /* Delays visibility change */
}

.fade-element.fade-in {
  opacity: 1;
  visibility: visible; /* Set visible when fading in */
  transition: opacity 1s ease-in-out, visibility 0s 0s; /* Immediately make it visible */
}

/* Simple Fade */
@keyframes fade {
  from {
    opacity: 0;
    visibility: hidden;
  }
  to {
    opacity: 1;
    visibility: visible;
  }
}

.fade.fade-in {
  animation: fade 1s ease-in-out forwards;
}

/* Fade Up */
@keyframes fade-up {
  from {
    opacity: 0;
    transform: translateY(20px); /* Starts below */
    visibility: hidden;
  }
  to {
    opacity: 1;
    transform: translateY(0);
    visibility: visible;
  }
}

.fade-up.fade-in {
  animation: fade-up 1s ease-in-out forwards;
}

/* Fade Down */
@keyframes fade-down {
  from {
    opacity: 0;
    transform: translateY(-20px); /* Starts above */
    visibility: hidden;
  }
  to {
    opacity: 1;
    transform: translateY(0);
    visibility: visible;
  }
}

.fade-down.fade-in {
  animation: fade-down 1s ease-in-out forwards;
}

/* Fade Left */
@keyframes fade-left {
  from {
    transform: translateX(-50px);
    opacity: 0;
    visibility: hidden;
  }
  to {
    transform: translateX(0);
    opacity: 1;
    visibility: visible;
  }
}

.fade-left.fade-in {
  animation: fade-left 1s ease-in-out forwards;
}

/* Fade Right */
@keyframes fade-right {
  from {
    transform: translateX(50px);
    opacity: 0;
    visibility: hidden;
  }
  to {
    transform: translateX(0);
    opacity: 1;
    visibility: visible;
  }
}

.fade-right.fade-in {
  animation: fade-right 1s ease-in-out forwards;
}

/* ------------------------------------- */
/*        CSSTransition for Menu          */
/* ------------------------------------- */

/* Entering */
.menu-enter {
  opacity: 0;
  transform: translateY(-20px);
}

.menu-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 300ms ease-in-out, transform 300ms ease-in-out;
}

/* Exiting */
.menu-exit {
  opacity: 1;
  transform: translateY(0);
}

.menu-exit-active {
  opacity: 0;
  transform: translateY(-20px);
  transition: opacity 300ms ease-in-out, transform 300ms ease-in-out;
}

/* ------------------------------------- */
/*        Hover animations               */
/* ------------------------------------- */

.btn:hover .plus { 
  animation: twist 0.25s ease-in-out forwards;
}

@keyframes twist { 
  from { 
      transform: rotate(0deg);
  }
  to { 
      transform: rotate(90deg);
  }
}

/* ------------------------------------- */
/*        Constant animations            */
/* ------------------------------------- */

/* Container to hold the sliding text */
.sliding-text-wrapper {
  width: 100vw; /* Full width of the viewport */
  overflow: hidden; /* Hide the overflow */
  white-space: nowrap; /* Ensure text stays in one line */
  position: relative;
}

/* Styling for the sliding text */
.sliding-text {
  display: inline-block;
  white-space: nowrap; /* Prevent text wrapping */
  font-weight: 600;
  animation: slide 50s linear infinite; /* Continuous sliding animation */
}

/* Keyframes for seamless sliding */
@keyframes slide {
  0% {
    transform: translateX(0); /* Start at normal position */
  }
  100% {
    transform: translateX(-50%); /* Move left by half its width */
  }
}

/* Ensure text size is responsive */
@media (max-width: 768px) {
  .sliding-text {
    font-size: 6vw;
  }
}

@media (max-width: 480px) {
  .sliding-text {
    font-size: 8vw;
  }
}

.glow { 
  animation: radiate 1.5s ease-in-out infinite;
}

@keyframes radiate {
  0%, 100% { 
    opacity: 0.25;
  }
  50% { 
    opacity: 1;
  }
  75% { 
    opacity: 0.5;
  }
}

.rotate {
  animation: threesixty 3s ease-in-out infinite; /* Total 3 seconds per cycle */
}

@keyframes threesixty {
  0%, 33.33% { 
    transform: rotate(0deg); /* Pause for 2 seconds during each 3-second cycle */
  }
  100% { 
    transform: rotate(360deg); /* Complete the rotation in the last 1 second */
  }
}

